function makeIdxTbl(obj,savedir)

model_name = obj.model_name;

struct_path = [ savedir '/modelobj/struct_idx_tbl_' model_name '_WT.mat' ];
if exist(struct_path,'file')>0
    obj.struct_path = struct_path;
else

    if ~strcmp(obj.strain_name,'WT')
        error('method makeIdxTbl must be applied to WT.')
    end
    
    [tbl_p,tbl_m]= return_tbls(model_name,obj.modelobj.tbl_out);

    struct_idx_tbl.model_name = model_name;
    
    struct_idx_tbl.tbl_p = tbl_p;
    struct_idx_tbl.tbl_m = tbl_m;
    
    save(struct_path,'struct_idx_tbl');

    obj.struct = struct_idx_tbl;
end

end

function [tbl_p,tbl_m]= return_tbls(model_name,tbl_out)

var_simbio = tbl_out.Name;

switch model_name                
    case 'Messiha2013'
         p_simbio = {'cell.ADH1',...
            'AK.k',...
            'ATPase.Vmax',...
            'cell.ENO1','cell.ENO2',...
            'cell.FBA1',...
            'GPD.Vmax',...
            'cell.GPM1',...
            'GPP.Vmax',...
            'cell.HXK1','cell.HXK2','cell.GLK1',...
            'cell.PDC1','cell.PDC5','cell.PDC6',...
            'cell.PFK2',...
            'cell.PGI1',...
            'cell.PGK1',...
            'PGM.Vmax',...
            'cell.CDC19',...% PYK
            'cell.TDH1','cell.TDH3',...
            'cell.TPI1',...
            'TPP.Vmax',...
            'TPS.Vmax',...
            'UGP.Vmax',...
            'acetate_branch.k',...% acetate_branch
            'udp_to_utp.k',...% udp_to_utp
            'HXT.Vmax',...
            'cell.GND1','cell.GND2',...
            'cell.RKI1',...
            'cell.RPE1',...
            'cell.SOL3',...
            'cell.TAL1',...
            'cell.TKL1',...
            'cell.ZWF1',...
            '[NADPH oxidase].k',...% NADPH oxidase
            '[E4P sink].k',...%E4P sink
            '[R5P sink].k'}'; %R5P sink
        met_simbio = {'ADP','GAP','G6P','NAD','F6P','AcAld','Ru5P','DHAP','R5P',...
            'NADPH','E4P','P2G','UTP','T6P','GLC','X5P','PYR','G3P','G6L','BPG',...
            'G1P','P6G','PEP','UDP'}';
        met_simbio_tmp = cellfun(@(x) ['cell.' x],met_simbio,'UniformOutput',false);
        [~, idx_met_simbio ] = ismember(met_simbio_tmp,var_simbio);
        assert(isequal(met_simbio_tmp, var_simbio(idx_met_simbio)));

end

[~, idx_p_simbio ] = ismember(p_simbio,var_simbio);
assert(isequal(p_simbio, var_simbio(idx_p_simbio)));

tbl_varnames = {'varSimbio','idxSimbio'};
tbl_p_ = cell(length(p_simbio),2);
tbl_p_(:,1) = p_simbio;
tbl_p_(:,2) = num2cell(idx_p_simbio);
tbl_p = cell2table(tbl_p_,'VariableNames',tbl_varnames);

tbl_m_ = cell(length(met_simbio_tmp),2);
tbl_m_(:,1) = met_simbio_tmp;
tbl_m_(:,2) = num2cell(idx_met_simbio);
tbl_m = cell2table(tbl_m_,'VariableNames',tbl_varnames);

end